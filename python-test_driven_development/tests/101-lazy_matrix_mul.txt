# Test file for 100-matrix_mul.py

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

# Test missing arguments
>>> matrix_mul()
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> matrix_mul([[1, 2]])
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

# Test basic matrix multiplication
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

# Test with floats
>>> matrix_mul([[1.5, 2.5]], [[2.0], [3.0]])
[[10.5]]

# Test TypeError for non-list inputs
>>> matrix_mul("not a list", [[1, 2]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([[1, 2]], "not a list")
Traceback (most recent call last):
TypeError: m_b must be a list

# Test TypeError for non-list of lists
>>> matrix_mul([1, 2, 3], [[1, 2]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2]], [1, 2, 3])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

# Test ValueError for empty matrices
>>> matrix_mul([], [[1, 2]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[]], [[1, 2]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul([[1, 2]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty

# Test TypeError for non-numeric elements
>>> matrix_mul([[1, "string"]], [[1], [2]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2]], [[1], ["string"]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

# Test TypeError for non-rectangular matrices
>>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

# Test ValueError for incompatible matrix dimensions
>>> matrix_mul([[1, 2, 3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
